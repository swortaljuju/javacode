import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedList;

/**
 * Created with IntelliJ IDEA.
 * User: WANG
 * Date: 2/18/14
 * Time: 6:51 PM
 * To change this template use File | Settings | File Templates.
 */
public class differentsorts {
    public static void quicksortiterative(int[] array)
    {
         class pair {
             int start;
             int end;
             pair(int astart,int aend)
             {
                 start=astart;
                 end=aend;
             }
         }
        ArrayList<pair> waitinglist = new ArrayList<pair>();
        waitinglist.add(new pair(0,array.length-1));
        while(!waitinglist.isEmpty())
        {
            pair cur=waitinglist.remove(0);
            int pointer=cur.start;
            for (int i=cur.start;i<cur.end;i++)
            {
              if (array[i]>=array[cur.end])
              {
                  int temp=array[i];
                  array[i]=array[pointer];
                  array[pointer]=temp;
                  pointer++;
              }
            }
            int temp=array[pointer];
            array[pointer]=array[cur.end];
            array[cur.end]=temp;
            if ((pointer-1)>cur.start)
                waitinglist.add(new pair(cur.start,pointer-1));
            if ((pointer+1)<cur.end)
                waitinglist.add(new pair(pointer+1,cur.end));
        }

    }
    public static void quicksortiterative1(int[] array)
    {

        LinkedList<Integer> waitinglist = new LinkedList<Integer>() ;
        waitinglist.add(0);
        waitinglist.add(array.length-1);
        while(!waitinglist.isEmpty())
        {
           int curstart = waitinglist.remove(),curend=waitinglist.remove();

            int pointer=curstart;
            for (int i=curstart;i<curend;i++)
            {
                if (array[i]>=array[curend])
                {
                    int temp=array[i];
                    array[i]=array[pointer];
                    array[pointer]=temp;
                    pointer++;
                }
            }
            int temp=array[pointer];
            array[pointer]=array[curend];
            array[curend]=temp;
            if ((pointer-1)>curstart)
            {    waitinglist.add(curstart);waitinglist.add(pointer-1);    }
            if ((pointer+1)<curend)
            {  waitinglist.add(pointer+1);waitinglist.add(curend);}
        }

    }
    public static void quicksortiterative2(int[] array)
    {

      int[] waitinglist = new int[2*array.length]; int take=0,put=0 ;
        waitinglist[put++]=0;

        waitinglist[put++]=array.length-1;
        while(take!=put)
        {
            int curstart = waitinglist[take++],curend= waitinglist[take++];

            int pointer=curstart;
            for (int i=curstart;i<curend;i++)
            {
                if (array[i]>=array[curend])
                {
                    int temp=array[i];
                    array[i]=array[pointer];
                    array[pointer]=temp;
                    pointer++;
                }
            }
            int temp=array[pointer];
            array[pointer]=array[curend];
            array[curend]=temp;
            if ((pointer-1)>curstart)
            {    waitinglist[put++]=curstart; waitinglist[put++]=pointer-1;    }
            if ((pointer+1)<curend)
            {   waitinglist[put++]=pointer+1; waitinglist[put++]=curend;}
        }

    }
    public static void quicksortrecursive(int[] array,int start,int end)
    {
      int pointer=start;
        for (int i=start;i<end;i++)
        {
            if (array[i]>=array[end])
            {
                int temp=array[i];
                array[i]=array[pointer];
                array[pointer]=temp;
                pointer++;
            }
        }
        int temp=array[pointer];
        array[pointer]=array[end];
        array[end]=temp;
        if ((pointer-1)>start)
            quicksortrecursive(array,start,pointer-1);
        if ((pointer+1)<end)
            quicksortrecursive(array,pointer+1,end);
    }

    public static void bubblesort(int[] array)
    {
        int len=array.length-1;
        int lastchange=len,count;
         do{
             count=0;
            for (int i=0;i<len;i++)
            {
                if (array[i]>array[i+1])
                {
                    int temp=array[i];
                    array[i]=array[i+1];
                    array[i+1]=temp;
                    lastchange=i+1;
                    count++;
                }
            }
             len=lastchange;
        }     while(count>0);

    }
    public static int[] insertionsort(int[] array)
    {
        int[] newarray= new int[array.length];
        int end=0;
        newarray[0]=array[0];
        for (int i=1;i<array.length;i++)
        {
            if (array[i]>=newarray[end])
            {    end++;
                newarray[end]=array[i];
                continue;
            }
            for (int j=0;j<=end;j++)
            {
                if (array[i]<newarray[j])
                {
                    for (int k=end;k>=j;k--)
                    newarray[k+1]=newarray[k];
                    newarray[j]=array[i];
                    end++;
                    break;
                }
            }

        }
        return newarray;
    }
    public static void racetest(int[] array)
    {
        double percentsum=0,total=20;
        for (int i=0;i<total;i++)
        {   long recurtime,itertime;
            if (i%2==0)
            {   int[] a1=Arrays.copyOf(array,array.length);
                long start=System.nanoTime();
                quicksortrecursive(a1,0,array.length-1);
                long end=System.nanoTime();
                recurtime=end-start;
           //     System.out.println("recursive time: "+recurtime);
                 a1=Arrays.copyOf(array,array.length);
               start=System.nanoTime();
                quicksortiterative2(a1);
                end=System.nanoTime();
                itertime=end-start;
           //     System.out.println("iterative time: "+itertime);
            }
            else
            {  long  start=System.nanoTime();
                quicksortiterative2(Arrays.copyOf(array,array.length));
              long end=System.nanoTime();
                itertime=end-start;
                start=System.nanoTime();
                quicksortrecursive(Arrays.copyOf(array,array.length),0,array.length-1);
                 end=System.nanoTime();
                recurtime=end-start;}
           percentsum+=(double)recurtime/(double)itertime;
        //    percentsum+=(double)recurtime-(double)itertime;
        }
        System.out.println("recursive time / iterative time on average = "+ percentsum/total+"   "+array.length);
    }
    public static void main(String[] args)
    {
        int[] a=new int[]{1,5,3,2,6,3,4,9,6,3,4,8,3,1,4,7,3,2,5},
                b=new int[]{3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,
                        4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3
                        ,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,
                        2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4
                        ,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,
                        4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8
                        ,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,
                        3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3
                        ,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,
                        4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3
                        ,4,6,7,8,4,3,1,3,1,5,3,2    ,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3
                        ,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,
                        2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4
                        ,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,
                        4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8
                        ,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,
                        3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5, 55
                        ,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4
                        ,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,
                        1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,
                        6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,
                        7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,
                        7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,
                        1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,
                        3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,
                        4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,
                        4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,
                        4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,
                        1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,
                        6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,
                        7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7
                        ,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1
                        ,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3
                        ,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4
                        ,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,
                        1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2
                        ,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,
                        5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4
                        ,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,
                        4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3
                        ,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,
                        2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4
                        ,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,
                        4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8
                        ,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,
                        3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3
                        ,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,
                        4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3
                        ,4,6,7,8,4,3,1,3,1,5,3,2    ,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3
                        ,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,
                        2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4
                        ,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,
                        4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8
                        ,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,
                        3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5, 55
                        ,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4
                        ,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,
                        1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,
                        6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,
                        7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,
                        7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,
                        1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,
                        3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,
                        4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,
                        4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,
                        4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,
                        1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,
                        6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,
                        7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7
                        ,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1
                        ,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3
                        ,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4
                        ,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,
                        1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2
                        ,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,
                        5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4
                        ,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,
                        4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3
                        ,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,
                        2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4
                        ,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,
                        4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8
                        ,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,
                        3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3
                        ,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,
                        4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3
                        ,4,6,7,8,4,3,1,3,1,5,3,2    ,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3
                        ,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,
                        2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4
                        ,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,
                        4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8
                        ,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,
                        3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5, 55
                        ,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4
                        ,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,
                        1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,
                        6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,
                        7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,
                        7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,
                        1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,
                        3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,
                        4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,
                        4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,
                        4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,
                        1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,
                        6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,
                        7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7
                        ,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1
                        ,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3
                        ,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4
                        ,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,
                        1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2
                        ,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,
                        5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4
                        ,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,
                        4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3
                        ,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,
                        2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4
                        ,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,
                        4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8
                        ,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,
                        3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3
                        ,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,
                        4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3
                        ,4,6,7,8,4,3,1,3,1,5,3,2    ,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3
                        ,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,27,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,2,6,3,4,5,7,3,4,6,7,8,4,3,1,3,1,5,3,


                    };

      //  racetest(a);
        racetest(b);


      //  quicksortiterative2(a);
     //   quicksortrecursive(a,0,a.length-1);
    //  System.out.println(Arrays.toString(a));
     //   bubblesort(a);
       // System.out.println(Arrays.toString(a));
       // a=new int[]{1,5,3,2,6,3,4,9,6,3,4,8,3,1,4,7,3,2,5};
       // System.out.println(Arrays.toString(insertionsort(a)));
    }
}
